#!/usr/bin/env python3

import argparse
import subprocess
import json

from pathlib import Path

USE_AFTER_FREE = 'USE_AFTER_FREE'
USE_AFTER_DELETE = 'USE_AFTER_DELETE'


def run_infer_debian(package):
    subprocess.run(
        ['./bin/run-infer-debian.sh', '-p', package, '-i', '--pulse-only'])

    report = open(
        Path('.') / 'result' / package / 'infer-out' / 'report.json', 'r')
    report_json = json.load(report)
    uaf_lines = []
    for alarm in report_json:
        bug_type = alarm['bug_type']
        if bug_type == USE_AFTER_FREE or bug_type == USE_AFTER_DELETE:
            uaf_lines.append(alarm['line'])

    infer_options = '--api-misuse-only --api-misuse-max-fp 5 --api-misuse-max-set 10'
    for line in uaf_lines:
        infer_options += f' --uaf-lines {line}'
    subprocess.run(
        ['./bin/run-infer-debian.sh', '-p', package, '-i', infer_options])


if __name__ == '__main__':
    parser = argparse.ArgumentParser()
    parser.add_argument('--debian',
                        default=False,
                        action=argparse.BooleanOptionalAction)
    parser.add_argument('--package')
    args = parser.parse_args()
    if args.debian:
        run_infer_debian(args.package)